---
- name: Check if ansible version is equal or greater than 2.11
  ansible.builtin.fail:
    msg: "Ansible core should be equal or greater than 2.11"
  when: ansible_version.full is ansible.builtin.version('2.11','<')

- name: Check if python is equal or greater than 3
  ansible.builtin.fail:
    msg: "Python should be equal or greater than 3"
  when: ansible_python.version.major is ansible.builtin.version('3','<')

- name: Install lvm packages
  ansible.builtin.package:
    package: "{{ lvm_packages }}"
    state: present
  notify:
    - Enable lvm2-monitor
  tags: lvm_init

- name: Start lvm2-monitor
  ansible.builtin.service:
    name: lvm2-monitor
    state: restarted
  tags: lvm_init

- name: Create LVG
  community.general.lvg:
    pvs: "{{ PV_DEVICES }}"
    vg: "{{ VG_NAME }}"
  tags: lvm_vg

- name: Create thin pools
  community.general.lvol:
    vg: "{{ VG_NAME }}"
    thinpool: "{{ item.name }}"
    size: "{{ item.size }}"
    shrink: "{{ item.shrink if item.shrink is defined else 'no' }}"
  loop: "{{ THIN_POOLS }}"
  when: THIN_POOLS is defined
  tags: lvm_thinpool

- name: Create normal LVs
  community.general.lvol:
    vg: "{{ VG_NAME }}"
    lv: "{{ item.name }}"
    size: "{{ item.size }}"
  loop: "{{ THICK_LVS }}"
  when: THICK_LVS is defined
  tags: lvm_lv

- name: Create thin LVs
  community.general.lvol:
    vg: "{{ VG_NAME }}"
    lv: "{{ item.name }}"
    size: "{{ item.size }}"
    thinpool: "{{ item.thinpool }}"
  loop: "{{ THIN_LVS }}"
  when: THIN_LVS is defined
  tags: lvm_thinlv
